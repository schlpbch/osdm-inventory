openapi: 3.0.3
info:
  title: Nova Inventory API
  version: 0.9.5
  description: >-
    NOVA Inventory API to access inventory information.
  contact:
    name: Andreas Schlapbach
    email: andreas.schlapbach@sbb.ch

tags:
  - name: master data
    description: >-
      Master data resources to get vehicle or product information hosted by 
      an inventory.
  - name: availabilities
    description: >-
      availability of vehicle

paths:
  /inventory/vehicles:
    get:
      summary:  returns a list of vehicles hosted in the inventory
      operationId: getVehicles
      tags:
        - master data
      parameters:
        - $ref: "#/components/parameters/accessToken"
        - $ref: "#/components/parameters/traceParent"
        - $ref: "#/components/parameters/traceState"
        - name: operatorRef
          description: >-
            If not set, all vehicles of all operators are returned
          required: false
          in: query
          schema:
            type: string
            example: 11
        - name: uicCountryCode
          required: false
          in: query
          schema:
            type: string
            example: 85
        - name: lastModified
          required: false
          in: query
          schema:
            type: string
            format: date-time

      responses:
        "200":
          description: >-
            returns a list of vehicles managed in this inventory system.
            An inventory Item is defined by its validity range and can have multiple validity ranges
            in which it is enabled.
          content:
            "application/json":
              schema:
                type: object
                properties:
                  warning:
                    $ref: "#/components/schemas/WarningMessageList"
                  vehicles:
                    type: array
                    items:
                      $ref: "#/components/schemas/Vehicle"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"
        "501":
          description: Not implemented
        "503":
          $ref: "#/components/responses/ServiceUnavailableResponse"

  /inventory/products:
    get:
      summary: returns a list of products hosted in the inventory
      operationId: getProducts
      tags:
        - master data
      parameters:
        - $ref: "#/components/parameters/accessToken"
        - $ref: "#/components/parameters/traceParent"
        - $ref: "#/components/parameters/traceState"
        - name: operatorRef
          description: >-
            If not set, all products of all operators are returned
          required: false
          in: query
          schema:
            type: string
            example: 11
        - name: uicCountryCode
          required: false
          in: query
          schema:
            type: string
            example: 85
        - name: lastModified
          required: false
          in: query
          schema:
            type: string
            format: date-time

      responses:
        "200":
          description: >-
            returns a list of products managed in this inventory system.
          content:
            "application/json":
              schema:
                type: object
                properties:
                  warnings:
                    $ref: "#/components/schemas/WarningMessageList"
                  products:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Product"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          $ref: "#/components/responses/InternalServerErrorResponse"
        "501":
          description: Not implemented
        "503":
          $ref: "#/components/responses/ServiceUnavailableResponse"

  /availabilities:
    post:
      tags:
        - availabilities
      summary: returns availability of a vehicle
      description: >-
        Returns availability. The availability can be filtered using place properties or service levels.
      operationId: getAvailabilities
      parameters:
        - $ref: "#/components/parameters/accessToken"
        - $ref: "#/components/parameters/traceParent"
        - $ref: "#/components/parameters/traceState"
      requestBody:
        description: request for availability
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AvailabilityRequest"
      responses:
        "200":
          description: the requested place
          headers:
            Cache-Control:
              schema:
                type: string
                default: "public, max-age=10000"
                description: >-
                  A places resource is fairly persistent and has a medium time to live to allow short-term caching.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailabilityResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          $ref: "#/components/responses/InternalServerErrorResponse"
        "500":
          description: internal server error
        "501":
          description: not implemented
        "503":
          $ref: "#/components/responses/ServiceUnavailableResponse"


components:
  parameters:
    accessToken:
      name: Access-Token
      in: header
      description: >-
        OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation
        for information on how to get a token.
      schema:
        type: string
      required: true

    acceptLanguage:
      name: Accept-Language
      in: header
      description: >-
        Describes the set of natural languages that are preferred for localized text in the response
        to the request (see RFC2616-sec14.4). Supporting English (en) is a must.
      schema:
        type: string
      required: false

    traceParent:
      name: traceparent
      in: header
      description: >-
        The traceparent header describes the position of the incoming request in its trace graph in a portable, 
        fixed-length format. Its design focuses on fast parsing. Every tracing tool MUST properly set 
        traceparent even when it only relies on vendor-specific information in tracestate (see W3C Trace Context).
      schema:
        type: string
      required: false

    traceState:
      name: tracestate
      in: header
      description:
        The tracestate extends traceparent with vendor-specific data represented by a set of name/value pairs.
        Storing information in tracestate is optional (see W3C Trace Context).
      schema:
        type: string
      required: false

  responses:
    BadRequestResponse:
      description: Bad Request (400)
      content:
        "application/problem+json":
          schema:
            $ref: "#/components/schemas/Problem"

    ConflictResponse:
      description: Conflict (409)
      content:
        "application/problem+json":
          schema:
            $ref: "#/components/schemas/Problem"

    InternalServerErrorResponse:
      description: Internal Server Error (500)
      content:
        "application/problem+json":
          schema:
            $ref: "#/components/schemas/Problem"

    ServiceUnavailableResponse:
      description: Service Unavailable (503)
      content:
        "application/problem+json":
          schema:
            $ref: "#/components/schemas/Problem"

  schemas:
    WarningMessageList:
      type: array
      items:
        type: object
        properties:
          code:
            type: string
          text:
            type: string
          elementList:
            type: array
            items:
              $ref: "#/components/schemas/Resource"
        description: >-
          This element can be used to pass non-blocking information or events,
          such as a price difference with the initially offered price at booking time.

    Resource:
      type: object
      description: used to represent a non-specified resource in the API.
      properties:
        id:
          type: string
          description: unique id of this resource on this server.
        title:
          type: string
          example: Bruxelles-Midi
        type:
          type: string
          enum:
            - MASTER_DATA
        href:
          type: string
          format: url
          example: "http://some.provider/location/2345"
      required:
        - id
        - title
        - type
        - href

    Problem:
      type: object
      description: >-
        Problem Details for HTTP APIs (RFC 7807) defines a "problem detail" as a way
        to carry machine-readable details of errors in a HTTP response to avoid
        the need to define new error response formats for HTTP APIs.
        See: https://tools.ietf.org/html/rfc7807
      properties:
        type:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: "about:blank"
          example: "https://example.com/probs/passenger-too-young"
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in English and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: >-
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the problem.

    # begin of vehicle

    Vehicle:
      type: object
      properties:
        configurations:
          type: array
          items:
            $ref: "#/components/schemas/InventoryItemConfiguration"
        id:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        vehicleNumber:
          type: integer
          format: int32
          example: IC 565
        operatorRef:
          type: string
          example: 11

    InventoryItemConfiguration:
      description: Defines a validity range for a given item.
      type: object
      properties:
        validFrom:
          type: string
          format: date
        validUntil:
          type: string
          format: date

    ## end of vehicles

    ## start of products

    ProductCode:
      description: the product code.
      type: string
      example: 125

    Product:
      type: object
      description: >-
        Structured description of the product, its name, comfort and sales / after-sales conditions
      required:
        - configurations
        - id
        - abstract
        - code
        - descriptions
        - conditions
        - fulfillmentOptions
      properties:
        configurations:
          type: array
          items:
            $ref: "#/components/schemas/InventoryItemConfiguration"
        id:
          description: unique id of this product on this server.
          type: string
        family:
          description: >-
            A set of product that are closely related to each other.
            E.g. all "Produktausprägungen" can be part of the same family.
          type: array
          items:
            $ref:  "#/components/schemas/ProductCode"
        abstract:
          type: string
          example: TGV Lyria Loisir 2
        code:
          type: string
          description: >-
            The product code expressed in the provider system (could be a
            mapping from an even lower-level provider).
          example: PT00AD
        descriptions:
          type: array
          items:
            $ref: "#/components/schemas/Translation"
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/Condition"
          description: >-
            Structured description of the sales or after-sales conditions.
        serviceClass:
          $ref: "#/components/schemas/ServiceClass"
        comfortClass:
          $ref: "#/components/schemas/ComfortClass"
        isTrainBound:
          type: boolean
          default: false
        isReturnProduct:
          type: boolean
          default: false
        fulfillmentOptions:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentOption"
        includedProducts:
          description: >-
            A set of products that are included with this product. The set can be empty.
          type: array
          items:
            $ref: "#/components/schemas/ProductCode"
        mandatoryProductsToBeValid:
          description: >-
            A set of products that need to be booked in order for the booking to be valid.
            E.g., a excellence class reservation needs an admission (e.g. 125) to be valid. 
            The set can be empty. 
          type: array
          items: 
            $ref: "#/components/schemas/ProductCode"
        serviceConstraintText:
          type: string
        carrierConstraintText:
          type: string
        throughTicketTags:
          type: array
          items:
            type: string
          description: >-
            List of tags (and their type) that allow identifying sets of offers for which related contracts can be grouped into one through ticket
        combinationTags:
          description: >-
            Tags to indicate that some products from a provider can be sold only when in conjunction with product(s) 
            from another provider using the same tag. At least one, not all, combinationTags must be in common to allow 
            combination. No combinationTags indicate that there are no combination constraints on the product.
          type: array
          items:
            type: object
            properties:
              combinationTag:
                type: string
              needsToBeCombined:
                description: >-
                  If false it means that this product can only be sold also when not in conjunction with a product with
                  the same tag. This is needed to propose specific products from one provider that depend on public ones of 
                  another.
                type: boolean
                default: false
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"


    FulfillmentOption:
      type: object
      description: >-
        CIT paper implies printing on value paper which is stock controlled.
      properties:
        type:
          $ref: "#/components/schemas/FulfillmentType"
        media:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentMediaType"

    Condition:
      type: object
      description: >-
        Describes sales and after sales conditions applicable to the product. 
        For a product to be refundable or exchangeable, at least one refund or exchange 
        (respectively) condition must be present.
      properties:
        type:
          type: string
          x-extensible-enum:
            - SALE
            - EXCHANGE
            - REFUND
            - TRAVEL
        descriptions:
          type: array
          items:
            $ref: "#/components/schemas/Translation"
        validFrom:
          type: string
          format: date-time
        validUntil:
          type: string
          format: date-time
        afterSalesFee:
          type: object
          properties:
            feePrice:
              $ref: "#/components/schemas/Price"
            isAllocatorFee:
              description: indicates whether the fee belongs to the allocator
              type: boolean
              default: false
      required:
        - type
        - description

    Price:
      type: object
      minProperties: 1
      properties:
        currency:
          $ref: "#/components/schemas/Currency"
        amount:
          description: amount in cents
          type: integer
          format: int32
        scale:
          description: scale of the amount - the number of positions after the comma
          type: integer
          default: 2
        vatDetails:
          type: array
          items:
            $ref: "#/components/schemas/VAT"
      required:
        - currency
        - amount

    Currency:
      description: ISO 4217 currency codes
      type: string
      example: CHF

    VAT:
      type: object
      properties:
        country:
          description: ISO 3166 2A codes
          type: string
          example: CH
        amount:
          description: amount in cents
          type: integer
          format: int32
          example: 5
        scale:
          description: scale of the amount - the number of positions after the comma
          type: integer
          default: 2
        percentage:
          type: number
          format: float
        taxId:
          type: string
        scope:
          $ref: "#/components/schemas/VatScope"
      required:
        - country
        - amount

    VatScope:
      description: scope where the VAT applies
      type: string
      x-extensible-enum:
        - INTERNATIONAL
        - NATIONAL
        - SHORT_DISTANCE
        - LONG_DISTANCE

    ServiceClass:
      type: object
      description: >-
        Class of service.
      properties:
        type:
          $ref: "#/components/schemas/ServiceClassType"
        name:
          type: string
          description: The name the carrier itself uses to designate this specific service class.
      required:
        - id

    ServiceClassType:
      type: string
      description: >-
        Type of quality level, finer grained than the comfort class.
      x-extensible-enum:
        - BEST
        - HIGH
        - STANDARD
        - BASIC

    ComfortClass:
      description: >-
        Generic class classification, mostly used to harmonize choice and
        representation across multiple carriers.
      type: string
      x-extensible-enum:
        - FIRST
        - SECOND
    Flexibility:
      type: string
      x-extensible-enum:
        - FULLFLEX
        - SEMIFLEX
        - NONFLEX

    FulfillmentType:
      type: string
      x-extensible-enum:
        - ETICKET
        - CIT_PAPER
        - PASS_CHIP
        - PASS_REFERENCE

    FulfillmentMediaType:
      type: string
      description: >-
        Fulfillment types. RCT2, RCCST and UIC-PDF are official UIC standards.
      x-extensible-enum:
        - RCT2
        - RCCST
        - UIC_PDF
        - PDF_A4
        - PKPASS
        - TICKETLESS

    Link:
      type: object
      description: >-
        The underlying system may provide additional links pointing on further
        information (such as HTML download links, web sites or extended APIs).
        Mechanism to add flexible extensions specific to an underlying system.
      properties:
        contentTypes:
          type: array
          example: '["application/json", "application/pdf"]'
          description: Possible content types of the resource.
          items:
            type: string
        href:
          type: string
          format: uri
          description: URL to the linked resource (no parameters needed).
          example: "https://www.brussels.info/train-stations/"
        type:
          type: string
          example: GET
          description: HTTP method to call the action
        rel:
          type: string
          example: Get Map
          description: Relation of this link to the current entity.
        version:
          type: integer
          format: int32
          example: 1
          description: Version of the current relation.
      required:
        - contentTypes
        - href
        - rel

    Translation:
      type: object
      properties:
        language:
          type: string
          description: language code following RFC2616-sec14.4
          example: en
        text:
          type: string
        shortText:
          type: string
      required:
        - language
        - text

    ## end of product schema

    AvailabilityRequest:
      type: object
      required:
        - trip
      properties:
        trip:
          $ref: "#/components/schemas/Trip"
        requestedPlaceProperties:
          description: >-
            Optional array of requested place properties such as WINDOW, TABLE,...
          type: array
          items:
            $ref: "#/components/schemas/PlaceProperty"
        requestedServiceLevels:
          description: >-
            Optional array of requested service level such as FIRST_CLASS_SEAT reservation.
            If the array is empty no filtering on service levels is performed.
          type: array
          items:
            $ref: "#/components/schemas/ServiceLevel"

    AvailabilityResponse:
      type: object
      properties:
        id: 
          type: string
        trip:
          $ref: "#/components/schemas/Trip"
        availabilityPerLeg:
          type: array
          items:
            $ref:  "#/components/schemas/AvailabilityTripLeg"

    AvailabilityTripLeg:
      properties:
        legId:
          type: number
          format: int32
        availableServices:
          type: array
          items:
            $ref: "#/components/schemas/ServiceAvailability"

   ##

    Trip:
      type: object
      required:
        - tripId
        - startTime
        - endTime
      properties:
        tripId:
          type: string
        origin:
          $ref: "#/components/schemas/Place"
        destination:
          $ref: "#/components/schemas/Place"
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        transfers:
          type: number
          format: int32
        tripLegs:
          type: array
          items:
            $ref: "#/components/schemas/TripLeg"

    Place:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          example: Zürich HB

    TripLeg:
      type: object
      properties:
        legId:
          type: number
          format: string
        seqId:
          type: number
          format: int32
        timedLeg:
          $ref: "#/components/schemas/TimedLeg"
        transferLeg:
          $ref: "#/components/schemas/TransferLeg"

    TimedLeg: 
      type: object
      properties:
        legBoard:
          $ref: "#/components/schemas/LegBoard"
        legAlight:
          $ref: "#/components/schemas/LegAlight"
        service:
          $ref: "#/components/schemas/Service"

    LegBoard:
      type: object
      properties:
        stopPlace:
          $ref: "#/components/schemas/StopPlace"
        serviceDeparture:
          $ref: "#/components/schemas/DepartureDate"

    LegAlight:
      type: object
      properties:
        stopPlace:
          $ref: "#/components/schemas/StopPlace"
        serviceArrival:
          $ref: "#/components/schemas/DepartureDate"

    TransferLeg:
      type: object
      properties:
        legStart:
          $ref: "#/components/schemas/Place"
        legEnd:
          $ref: "#/components/schemas/Place"
        duration:
          type: string
          format: duration
          example: PT20M

    DepartureDate:
      type: object
      properties:
        timetabledTime:
          type: string
          format: date-time
      
    StopPlace:
      type: object
      properties:
        stopPlaceRef:
          $ref: "#/components/schemas/StopPlaceRef"
        stopPlaceName:
          type: string

    Service:
      type: object
      properties:
        publishedServiceName:
          type: string
          example: "PE 905"
        vehicleNumber:
          type: string
          example: "905"
        operatorRef:
          type: string
          example: "RhB"

    Passenger: 
      description: 
        Passenger with the relevant information only to be contacted in case if a disruption.
      type: object
      properties:
        externalRef:
          type: string
          example: TKT-ID-2314234
        firstName:
          type: string
          example: Patrick
        lastName:
          type: string
          example: Schweizer
        dateOfBirth:
          type: string
          format: date
        eMail:
          type: string
          example: p.schweizer@bluewin.ch
        phone:
          type: string
          example: 078 434 4434

    PlaceProperty:
      description:
        Define a property of a place. For a given service level a set of properties are valid.

        See UIC 918.1, Tarif Code (42), type of coach (37-1) and Compartment with Special Features (37-2).
      type: string
      enum:
        # Seat Preference
        - WINDOW
        - MIDDLE
        - AISLE
        - SOLO
        - TABLE
        # Restaurant Preference
        - RESTAURANT
        # Bike Preference
        - ACC_BICYCLE
        - BICYCLE
        - BICYCLE_INCL_SEAT
        - ACC_TANDEM
        - TANDEM
        # PRM
        - PRM
        - WHEELCHAIR
        - WHEELCHAIR_WS
        - EASY_ACCESS
        # Zone Preference
        - BUSINESS
        - SILENCE 
        - FAMILY
        # Deck Preference
        - LOWER_DECK
        - UPPER_DECK
        # Special Preference
        - PANORAMA
        - FRONT_VIEW

    ServiceLevel:
      description: Defines a service level. See UIC 918-1, Service Level. p. 157
      type: string
      enum:
        - FIRST_CLASS_SEAT
        - SECOND_CLASS_SEAT
        - BIKE
        - RESTAURANT

    StopPlaceRef:
      description: >-
        Reference to a Stop Place using URNs to define code. Default code list UIC MERITS/TAP-TSI station codes
      type: string
      example: "8503000"

    ServiceAvailability:
      type: object
      properties:
        serviceLevel:
          $ref: "#/components/schemas/ServiceLevel"
        availableZones:
          type: array
          items: 
            $ref: "#/components/schemas/ZoneAvailability"

    ZoneAvailability:
      type: object
      properties:
        zoneType:
          $ref: "#/components/schemas/ZoneType"
        numericAvailability:
          type: number
          format: int32
        placeProperties:
          type: array
          items:
            $ref: "#/components/schemas/PlaceProperty"

    ZoneType:
      type: string
      enum:
        - BUSINESS
        - SILENCE
        - FAMILY

    ##